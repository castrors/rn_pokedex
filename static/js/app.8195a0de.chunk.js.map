{"version":3,"sources":["src/components/Spacer.tsx","src/components/Tag.tsx","src/components/HorizontalList.tsx","src/components/PokemonImage.tsx","src/utils/utils.tsx","src/screens/PokemonDetailsScreen.tsx","src/components/PokemonCard.tsx","src/api/pokemonApi.tsx","src/screens/PokemonListScreen.tsx","App.tsx"],"names":["Spacer","children","View","style","margin","Tag","text","Text","alignSelf","textAlign","backgroundColor","borderRadius","padding","overflow","HorizontalList","title","data","h3","FlatList","horizontal","keyExtractor","item","renderItem","PokemonImage","number","width","height","marginTop","paddingTop","marginBottom","paddingVertical","source","uri","capitalize","name","charAt","toUpperCase","slice","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","getBackgroundColor","type","deviceWidth","Dimensions","get","PokemonDetailsScreen","pokemon","navigation","getParam","types","map","abilities","ability","moves","move","contentContainerStyle","flexGrow","flex","flexDirection","justifyContent","alignItems","id","h2","navigationOptions","StyleSheet","create","fontSize","PokemonCard","containerStyle","toString","padStart","h4","getPokemon","a","async","url","fetch","res","json","fetchPokemons","pokemonList","i","push","PokemonListScreen","useState","setPokemonList","useEffect","pokemons","getAllPokemons","length","ActivityIndicator","size","onPress","navigate","numColumns","withNavigation","navigator","createStackNavigator","List","Details","initialRouteName","createAppContainer"],"mappings":"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","file":"static/js/app.8195a0de.chunk.js","sourcesContent":["import React from \"react\"\nimport { View } from \"react-native\";\n\nexport function Spacer({ children }: { children: any }) {\n    return (\n        <View style={{ margin: 15 }}>{children}</View>\n    )\n}","import React from \"react\"\nimport { Text } from \"react-native\";\n\n\nexport function Tag({ text }: { text: string }) {\n    return (\n        <Text\n            style={{\n                alignSelf: 'center',\n                textAlign: 'center',\n                backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                borderRadius: 8,\n                margin: 8,\n                padding: 4,\n                overflow: 'hidden'\n\n            }}\n        >{text}</Text>\n\n    )\n}","import React from \"react\"\nimport { FlatList, View } from \"react-native\";\nimport { Text } from \"react-native-elements\";\nimport { Spacer } from \"./Spacer\";\nimport { Tag } from \"./Tag\";\n\n\nexport function HorizontalList({ title, data }: { title: string, data: string[] }) {\n    return (\n        <View style={{\n            alignSelf: 'stretch',\n        }}>\n            <Spacer>\n                <Text h3>{title}</Text>\n            </Spacer>\n\n            <FlatList\n                horizontal\n                data={data}\n                keyExtractor={(item) => `${title}_${item}`}\n                renderItem={({ item }) => {\n                    return (\n                        <Tag text={item} />\n                    )\n                }}\n            />\n\n        </View>\n\n    )\n}","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Image } from \"react-native-elements\";\n\ninterface PokemonImageData {\n    number: number,\n    width: number\n}\n\nexport function PokemonImage({ number, width }: PokemonImageData) {\n    return (\n        <View style={{\n            width: width / 2,\n            height: width / 2,\n            marginTop: 20,\n            paddingTop: 30,\n            marginBottom: 10,\n            backgroundColor: 'rgba(255,255,255, 0.6)',\n            borderRadius: width / 4,\n            paddingVertical: 5,\n        }}>\n            <Image\n                source={{ uri: `https://pokeres.bastionbot.org/images/pokemon/${number}.png` }}\n                style={{\n                    width: width / 2,\n                    height: width / 2,\n                }}\n            />\n        </View>\n    )\n}","export function capitalize(name: string): string {\n    return name.charAt(0).toUpperCase() + name.slice(1);\n}\n\nconst colors = {\n    fire: '#FDDFDF',\n    grass: '#DEFDE0',\n    electric: '#FCF7DE',\n    water: '#DEF3FD',\n    ground: '#f4e7da',\n    rock: '#d5d5d4',\n    fairy: '#fceaff',\n    poison: '#98d7a5',\n    bug: '#f8d5a3',\n    dragon: '#97b3e6',\n    psychic: '#eaeda1',\n    flying: '#F5F5F5',\n    fighting: '#E6E0D4',\n    normal: '#F5F5F5'\n}\n\nexport function getBackgroundColor(type: string): string {\n    return colors[type as keyof typeof colors] ?? colors.normal\n}","import React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Text, Image } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Ability, Move, Pokemon, Type } from '../api/pokemonApi';\nimport { HorizontalList } from '../components/HorizontalList';\nimport { PokemonImage } from '../components/PokemonImage';\nimport { Spacer } from '../components/Spacer';\nimport { capitalize, getBackgroundColor } from '../utils/utils';\n\nconst deviceWidth = Dimensions.get('window').width;\nfunction PokemonDetailsScreen({ navigation }: { navigation: any }) {\n    const pokemon = navigation.getParam('pokemon')\n\n    const types = pokemon\n        .types\n        .map((type: Type) => type.type.name)\n\n    const abilities = pokemon\n        .abilities\n        .map((ability: Ability) => ability.ability.name)\n\n    const moves = pokemon\n        .moves\n        .map((move: Move) => move.move.name)\n\n    return (\n        <ScrollView contentContainerStyle={{\n            flexGrow: 1,\n        }}>\n            <View style={{\n                backgroundColor: `${getBackgroundColor(types[0])}`,\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n            }}>\n                <PokemonImage\n                    width={deviceWidth}\n                    number={pokemon.id}\n                />\n\n                <Spacer>\n                    <Text h2 style={{\n                        alignSelf: 'center',\n                        textAlign: 'center',\n                    }}>\n                        {capitalize(pokemon.name)}\n                    </Text>\n                </Spacer>\n\n                <HorizontalList\n                    title={'Types'}\n                    data={types}\n                />\n\n                <HorizontalList\n                    title={'Abilities'}\n                    data={abilities}\n                />\n\n                <HorizontalList\n                    title={'Moves'}\n                    data={moves}\n                />\n\n            </View>\n        </ScrollView>\n    );\n}\n\nPokemonDetailsScreen.navigationOptions = ({ navigation }: { navigation: any }) => ({\n    title: capitalize(navigation.getParam('pokemon', { name: 'Pokemon' }).name)\n})\n\nconst styles = StyleSheet.create({\n    title: {\n        fontSize: 20\n    }\n});\n\nexport default PokemonDetailsScreen","import React from 'react';\nimport {\n    Dimensions,\n    StyleSheet, View\n} from 'react-native';\nimport { Card, Image, Text } from 'react-native-elements';\nimport { capitalize, getBackgroundColor } from '../utils/utils';\nimport { Tag } from './Tag';\nimport { PokemonImage } from './PokemonImage';\nimport { Spacer } from './Spacer';\n\ninterface PokemonCardData {\n    number: number;\n    name: string;\n    type: string;\n}\n\nconst deviceWidth = Dimensions.get('window').width;\n\nexport function PokemonCard({ number, name, type }: PokemonCardData) {\n    return (\n        <Card containerStyle={{\n            flex: 1,\n            margin: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: deviceWidth / 2,\n            backgroundColor: getBackgroundColor(type)\n        }}>\n            <PokemonImage\n                width={deviceWidth / 2}\n                number={number}\n            />\n            <Spacer>\n                <Tag text={`#${number.toString().padStart(3, '0')}`} />\n            </Spacer>\n\n            <Text h4 style={{\n                alignSelf: 'center',\n                textAlign: 'center',\n            }}>\n                {capitalize(name)}\n            </Text>\n\n            <Text style={{\n                alignSelf: 'center',\n                textAlign: 'center',\n            }}>Type: {type}</Text>\n        </Card>\n    );\n}\n\n\n\nconst styles = StyleSheet.create({\n    text: {\n        alignSelf: 'center',\n        textAlign: 'center',\n    }\n});","export interface Pokemon {\n    abilities: Ability[];\n    base_experience: number;\n    forms: Species[];\n    game_indices: GameIndex[];\n    height: number;\n    held_items: any[];\n    id: number;\n    is_default: boolean;\n    location_area_encounters: string;\n    moves: Move[];\n    name: string;\n    order: number;\n    past_types: any[];\n    species: Species;\n    sprites: Sprites;\n    stats: Stat[];\n    types: Type[];\n    weight: number;\n}\n\nexport interface Ability {\n    ability: Species;\n    is_hidden: boolean;\n    slot: number;\n}\n\nexport interface Species {\n    name: string;\n    url: string;\n}\n\nexport interface GameIndex {\n    game_index: number;\n    version: Species;\n}\n\nexport interface Move {\n    move: Species;\n    version_group_details: VersionGroupDetail[];\n}\n\nexport interface VersionGroupDetail {\n    level_learned_at: number;\n    move_learn_method: Species;\n    version_group: Species;\n}\n\nexport interface GenerationV {\n    \"black-white\": Sprites;\n}\n\nexport interface GenerationIv {\n    \"diamond-pearl\": Sprites;\n    \"heartgold-soulsilver\": Sprites;\n    platinum: Sprites;\n}\n\nexport interface Versions {\n    \"generation-i\": GenerationI;\n    \"generation-ii\": GenerationIi;\n    \"generation-iii\": GenerationIii;\n    \"generation-iv\": GenerationIv;\n    \"generation-v\": GenerationV;\n    \"generation-vi\": { [key: string]: GenerationVi };\n    \"generation-vii\": GenerationVii;\n    \"generation-viii\": GenerationViii;\n}\n\nexport interface Sprites {\n    back_default: string;\n    back_female: null;\n    back_shiny: string;\n    back_shiny_female: null;\n    front_default: string;\n    front_female: null;\n    front_shiny: string;\n    front_shiny_female: null;\n    other?: Other;\n    versions?: Versions;\n    animated?: Sprites;\n}\n\nexport interface GenerationI {\n    \"red-blue\": RedBlue;\n    yellow: RedBlue;\n}\n\nexport interface RedBlue {\n    back_default: string;\n    back_gray: string;\n    front_default: string;\n    front_gray: string;\n}\n\nexport interface GenerationIi {\n    crystal: Crystal;\n    gold: Crystal;\n    silver: Crystal;\n}\n\nexport interface Crystal {\n    back_default: string;\n    back_shiny: string;\n    front_default: string;\n    front_shiny: string;\n}\n\nexport interface GenerationIii {\n    emerald: Emerald;\n    \"firered-leafgreen\": Crystal;\n    \"ruby-sapphire\": Crystal;\n}\n\nexport interface Emerald {\n    front_default: string;\n    front_shiny: string;\n}\n\nexport interface GenerationVi {\n    front_default: string;\n    front_female: null;\n    front_shiny: string;\n    front_shiny_female: null;\n}\n\nexport interface GenerationVii {\n    icons: DreamWorld;\n    \"ultra-sun-ultra-moon\": GenerationVi;\n}\n\nexport interface DreamWorld {\n    front_default: string;\n    front_female: null;\n}\n\nexport interface GenerationViii {\n    icons: DreamWorld;\n}\n\nexport interface Other {\n    dream_world: DreamWorld;\n    \"official-artwork\": OfficialArtwork;\n}\n\nexport interface OfficialArtwork {\n    front_default: string;\n}\n\nexport interface Stat {\n    base_stat: number;\n    effort: number;\n    stat: Species;\n}\n\nexport interface Type {\n    slot: number;\n    type: Species;\n}\n\n\nconst getPokemon = async (id: number): Promise<Pokemon> => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}`\n    const res = await fetch(url)\n    const data = await res.json()\n    return data as Pokemon\n}\n\nexport const fetchPokemons = async (): Promise<Pokemon[]> => {\n    const pokemonList = []\n    for (let i = 1; i <= 151; i++) {\n        const pokemon = await getPokemon(i)\n        pokemonList.push(pokemon)\n    }\n    return pokemonList\n}","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, ListRenderItem, ActivityIndicator } from 'react-native';\nimport { PokemonCard } from '../components/PokemonCard';\nimport PropTypes from 'prop-types';\nimport { fetchPokemons, Pokemon } from '../api/pokemonApi';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { withNavigation } from 'react-navigation';\n\nfunction PokemonListScreen({ navigation }: { navigation: any }) {\n    const [pokemonList, setPokemonList] = useState<Pokemon[]>([])\n\n    useEffect(() => {\n        async function getAllPokemons() {\n            const pokemons = await fetchPokemons()\n            setPokemonList([...pokemonList, ...pokemons])\n        }\n        getAllPokemons()\n    }, [])\n\n    const renderPokemonCards: ListRenderItem<Pokemon> = ({ item }) => (\n        <TouchableOpacity\n            onPress={() => navigation.navigate('Details', { pokemon: item })}>\n            <PokemonCard\n                number={item.id}\n                name={item.name}\n                type={`${item.types[0].type.name}`}\n            />\n        </TouchableOpacity>\n    )\n\n    return (\n        <View style={{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n        }}>\n            {pokemonList.length === 0\n                ? <ActivityIndicator size=\"large\" />\n                : <FlatList\n                    data={pokemonList}\n                    keyExtractor={(pokemon) => `${pokemon.id}`}\n                    renderItem={renderPokemonCards}\n                    numColumns={2}\n                />\n            }\n\n\n        </View>\n    );\n}\n\nPokemonListScreen.navigationOptions = {\n    title: 'Pokedex'\n}\n\n\nconst styles = StyleSheet.create({\n    title: {\n        fontSize: 20\n    }\n});\n\nexport default withNavigation(PokemonListScreen)","import { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport PokemonDetailsScreen from './src/screens/PokemonDetailsScreen';\nimport PokemonListScreen from './src/screens/PokemonListScreen';\n\nconst navigator = createStackNavigator({\n  List: PokemonListScreen,\n  Details: PokemonDetailsScreen\n}, {\n  initialRouteName: 'List',\n});\n\nexport default createAppContainer(navigator);"],"sourceRoot":""}